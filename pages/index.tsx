import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { useWallet } from "use-wallet";
import toast, { Toaster } from "react-hot-toast";
import { useTransition, animated } from "react-spring";
import Navbar from "../components/Navbar";
import ChestCloseup from "../components/ChestCloseup";
import { useEffect, useState } from "react";
import { useMintAvailable } from "../hooks/useMintAvailable";

const BACKGROUND_IMAGES = {
  open: "/assets/mint-background-open.png",
  closed: "/assets/mint-background-closed.png",
};

const BACKGROUND_SPARKLES = {
  open: "/assets/sparkles.gif",
  closed: "",
};

const Home: NextPage = () => {
  const wallet = useWallet();
  const { status, networkName } = wallet;

  const [background, setBackground] = useState("closed");
  const [closeUp, setCloseup] = useState(false);
  const [whitelistProof, setWhitelistProof] = useState([]);
  const toggleCloseup = () => setCloseup(!closeUp);

  const {
    available,
    isLoading,
    update: updateMintAvailable,
  } = useMintAvailable(whitelistProof);

  useEffect(() => {
    if (status === "connected") {
      fetch(`/api/whitelist?address=${wallet.account}`).then(async (res) => {
        const proof: string[] = await res.json();
        console.log("merkleProof", proof);
        setWhitelistProof(proof);
      });
    }
    setBackground(available && status === "connected" ? "open" : "closed");
    setCloseup(available && closeUp);
  }, [status, available, closeUp, wallet]);

  useEffect(() => {
    let interval = setInterval(updateMintAvailable, 2500);
    return () => clearInterval(interval);
  });

  const handleClick = (e) => {
    console.log(e);
    switch (background) {
      case "open":
        if (status === "connected") toggleCloseup();
        else toast("Connect your wallet.", { icon: "👝" });
        break;
      case "closed":
        toast("The chest is closed. Wait for it to open up.", {
          icon: "💤",
        });
        break;
    }
  };

  return (
    <>
      <div
        className="absolute top-0 left-0 w-screen h-screen"
        style={{
          backgroundImage: `url(${BACKGROUND_IMAGES[background]})`,
          backgroundPosition: "45% center",
          backgroundSize: "cover",
          pointerEvents: "none",
        }}
      ></div>
      <div
        className="absolute top-0 left-0 w-screen h-screen"
        style={{
          backgroundImage: `url(${BACKGROUND_SPARKLES[background]})`,
          backgroundPosition: "45% center",
          backgroundSize: "cover",
          opacity: 0.35,
          pointerEvents: "none",
        }}
      ></div>
      <div>
        <Head>
          <title>MegaRetro{"'"}s Potent Potions Season 1</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <Toaster position="bottom-right" reverseOrder={true} />
        <Navbar />
        <div className="z-50 w-screen h-screen" onClick={handleClick}></div>
        {closeUp && (
          <ChestCloseup
            toggleCloseup={toggleCloseup}
            merkleProof={whitelistProof}
          />
        )}
      </div>
    </>
  );
};

export default Home;
