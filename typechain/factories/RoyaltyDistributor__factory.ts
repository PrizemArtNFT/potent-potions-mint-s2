/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RoyaltyDistributor,
  RoyaltyDistributorInterface,
} from "../RoyaltyDistributor";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
    ],
    name: "ReceiverAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
    ],
    name: "ReceiverRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
    ],
    name: "addReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cumulativePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "distributeBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "receiverCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "receivers",
    outputs: [
      {
        internalType: "address payable",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "receiversArrayLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
    ],
    name: "removeReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405261000d33610012565b610062565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610ae8806100716000396000f3fe6080604052600436106100955760003560e01c8063983ef3ed11610059578063983ef3ed1461016c578063a8f3c73214610182578063bfd772fc146101a2578063cd8449e7146101e1578063f2fde38b146101f757600080fd5b8063280beaa2146100d45780635f3ccdd9146100f8578063715018a61461011a5780637943da691461012f5780638da5cb5b1461014457600080fd5b366100cf576040513481527f1a07f76ee25d689f09f51951e5b4594bb2e440b7935111a41ba06afeb50ff0149060200160405180910390a1005b600080fd5b3480156100e057600080fd5b506001545b6040519081526020015b60405180910390f35b34801561010457600080fd5b5061011861011336600461096f565b610217565b005b34801561012657600080fd5b50610118610415565b34801561013b57600080fd5b5061011861044b565b34801561015057600080fd5b506000546040516001600160a01b0390911681526020016100ef565b34801561017857600080fd5b506100e560035481565b34801561018e57600080fd5b5061011861019d36600461096f565b6105cc565b3480156101ae57600080fd5b506101c26101bd36600461099a565b610829565b604080516001600160a01b0390931683526020830191909152016100ef565b3480156101ed57600080fd5b506100e560025481565b34801561020357600080fd5b5061011861021236600461094c565b610861565b6000546001600160a01b0316331461024a5760405162461bcd60e51b8152600401610241906109b2565b60405180910390fd5b606481106102855760405162461bcd60e51b81526020600482015260086024820152670a89e9ebe90928e960c31b6044820152606401610241565b600081116102bf5760405162461bcd60e51b8152602060048201526007602482015266544f4f5f4c4f5760c81b6044820152606401610241565b6064816002546102cf91906109e7565b111561030b5760405162461bcd60e51b815260206004820152600b60248201526a13505617d4915050d2115160aa1b6044820152606401610241565b604080518082019091526001600160a01b03838116825260208201838152600180548082018255600091825293517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6600295860290810180546001600160a01b031916929095169190911790935590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf7909201919091558154839291906103b49084906109e7565b9091555050600380549060006103c983610a6c565b9190505550816001600160a01b03167fcc5646d2b5056370ad8ab59b52dc4674e8de23cbfb0e4c329066867a28ea00bf8260405161040991815260200190565b60405180910390a25050565b6000546001600160a01b0316331461043f5760405162461bcd60e51b8152600401610241906109b2565b61044960006108fc565b565b6000546001600160a01b031633146104755760405162461bcd60e51b8152600401610241906109b2565b47806104b35760405162461bcd60e51b815260206004820152600d60248201526c454d5054595f42414c414e434560981b6044820152606401610241565b60005b6001548110156105c8576000600182815481106104e357634e487b7160e01b600052603260045260246000fd5b600091825260208083206040805180820190915260029093020180546001600160a01b03168084526001909101549183018290529193506105256064876109ff565b61052f9190610a1f565b604051600081818185875af1925050503d806000811461056b576040519150601f19603f3d011682016040523d82523d6000602084013e610570565b606091505b50509050806105b35760405162461bcd60e51b815260206004820152600f60248201526e15d2551211149055d7d19052531151608a1b6044820152606401610241565b505080806105c090610a6c565b9150506104b6565b5050565b6000546001600160a01b031633146105f65760405162461bcd60e51b8152600401610241906109b2565b60005b826001600160a01b03166001828154811061062457634e487b7160e01b600052603260045260246000fd5b60009182526020909120600290910201546001600160a01b03161480159061067e5750816001828154811061066957634e487b7160e01b600052603260045260246000fd5b90600052602060002090600202016001015414155b156106d4578061068d81610a6c565b600154909250821090506106cf5760405162461bcd60e51b81526020600482015260096024820152681393d517d193d5539160ba1b6044820152606401610241565b6105f9565b600180546106e3908290610a3e565b8154811061070157634e487b7160e01b600052603260045260246000fd5b90600052602060002090600202016001828154811061073057634e487b7160e01b600052603260045260246000fd5b60009182526020909120825460029092020180546001600160a01b0319166001600160a01b03909216919091178155600191820154908201558054610776908290610a3e565b8154811061079457634e487b7160e01b600052603260045260246000fd5b60009182526020822060029182020180546001600160a01b031916815560010182905580548492906107c7908490610a3e565b9091555050600380549060006107dc83610a55565b9190505550826001600160a01b03167f41639571b27e7a11b27cda3cf8adcad3e469f8be2b8c3796d4d5e5603e6a57b18360405161081c91815260200190565b60405180910390a2505050565b6001818154811061083957600080fd5b6000918252602090912060029091020180546001909101546001600160a01b03909116915082565b6000546001600160a01b0316331461088b5760405162461bcd60e51b8152600401610241906109b2565b6001600160a01b0381166108f05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610241565b6108f9816108fc565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561095d578081fd5b813561096881610a9d565b9392505050565b60008060408385031215610981578081fd5b823561098c81610a9d565b946020939093013593505050565b6000602082840312156109ab578081fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082198211156109fa576109fa610a87565b500190565b600082610a1a57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610a3957610a39610a87565b500290565b600082821015610a5057610a50610a87565b500390565b600081610a6457610a64610a87565b506000190190565b6000600019821415610a8057610a80610a87565b5060010190565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03811681146108f957600080fdfea26469706673582212204ab215e1b1cfec2075959eff3bd44e011504acaa754c4cf17a99ebd51bc01a0c64736f6c63430008040033";

export class RoyaltyDistributor__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<RoyaltyDistributor> {
    return super.deploy(overrides || {}) as Promise<RoyaltyDistributor>;
  }
  getDeployTransaction(
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RoyaltyDistributor {
    return super.attach(address) as RoyaltyDistributor;
  }
  connect(signer: Signer): RoyaltyDistributor__factory {
    return super.connect(signer) as RoyaltyDistributor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RoyaltyDistributorInterface {
    return new utils.Interface(_abi) as RoyaltyDistributorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RoyaltyDistributor {
    return new Contract(address, _abi, signerOrProvider) as RoyaltyDistributor;
  }
}
