/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestERC1155, TestERC1155Interface } from "../TestERC1155";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040805160208101909152600081526200002c81620000f3565b5062000059336001670de0b6b3a7640000604051806020016040528060008152506200010c60201b60201c565b6200007e3360026001604051806020016040528060008152506200010c60201b60201c565b620000a33360036001604051806020016040528060008152506200010c60201b60201c565b620000c83360046001604051806020016040528060008152506200010c60201b60201c565b620000ed3360056001604051806020016040528060008152506200010c60201b60201c565b62000740565b8051620001089060029060208401906200047a565b5050565b6001600160a01b038416620001725760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084015b60405180910390fd5b33620001988160008762000186886200022c565b62000191886200022c565b5050505050565b6000848152602081815260408083206001600160a01b038916845290915281208054859290620001ca908490620005fb565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a462000191816000878787876200028e565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106200027557634e487b7160e01b600052603260045260246000fd5b602090810291909101015292915050565b505050505050565b620002ad846001600160a01b03166200047460201b620007041760201c565b15620002865760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190620002e990899089908890889088906004016200059f565b602060405180830381600087803b1580156200030457600080fd5b505af192505050801562000337575060408051601f3d908101601f19168201909252620003349181019062000520565b60015b620003f8576200034662000698565b806308c379a014156200038757506200035e620006b1565b806200036b575062000389565b8060405162461bcd60e51b8152600401620001699190620005e6565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e746572000000000000000000000000606482015260840162000169565b6001600160e01b0319811663f23a6e6160e01b146200046b5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b606482015260840162000169565b50505050505050565b3b151590565b828054620004889062000620565b90600052602060002090601f016020900481019282620004ac5760008555620004f7565b82601f10620004c757805160ff1916838001178555620004f7565b82800160010185558215620004f7579182015b82811115620004f7578251825591602001919060010190620004da565b506200050592915062000509565b5090565b5b808211156200050557600081556001016200050a565b60006020828403121562000532578081fd5b81516001600160e01b0319811681146200054a578182fd5b9392505050565b60008151808452815b8181101562000578576020818501810151868301820152016200055a565b818111156200058a5782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090620005db9083018462000551565b979650505050505050565b6020815260006200054a602083018462000551565b600082198211156200061b57634e487b7160e01b81526011600452602481fd5b500190565b600181811c908216806200063557607f821691505b602082108114156200065757634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f191681016001600160401b03811182821017156200069157634e487b7160e01b600052604160045260246000fd5b6040525050565b600060033d1115620006ae57600481823e5160e01c5b90565b600060443d1015620006c05790565b6040516003193d81016004833e81513d6001600160401b038083116024840183101715620006f057505050505090565b8285019150815181811115620007095750505050505090565b843d8701016020828501011115620007245750505050505090565b62000735602082860101876200065d565b509095945050505050565b61156e80620007506000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461017957600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a3660046110cd565b61018c565b6040519081526020015b60405180910390f35b6100c56100c03660046111c1565b610235565b60405190151581526020016100a9565b6100e86100e3366004611200565b6102d2565b6040516100a9919061137f565b610108610103366004610f8a565b610366565b005b61011d6101183660046110f6565b610408565b6040516100a9919061133e565b610108610138366004611093565b61057e565b6100c561014b366004610f58565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b610108610187366004611030565b610669565b60006001600160a01b03831661020f5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b031982167fd9b67a2600000000000000000000000000000000000000000000000000000000148061029857506001600160e01b031982167f0e89341c00000000000000000000000000000000000000000000000000000000145b806102cc57507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b6060600280546102e1906113ce565b80601f016020809104026020016040519081016040528092919081815260200182805461030d906113ce565b801561035a5780601f1061032f5761010080835404028352916020019161035a565b820191906000526020600020905b81548152906001019060200180831161033d57829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103825750610382853361014b565b6103f45760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f76656400000000000000000000000000006064820152608401610206565b610401858585858561070a565b5050505050565b606081518351146104815760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d6174636800000000000000000000000000000000000000000000006064820152608401610206565b6000835167ffffffffffffffff8111156104ab57634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156104d4578160200160208202803683370190505b50905060005b84518110156105765761053b85828151811061050657634e487b7160e01b600052603260045260246000fd5b602002602001015185838151811061052e57634e487b7160e01b600052603260045260246000fd5b602002602001015161018c565b82828151811061055b57634e487b7160e01b600052603260045260246000fd5b602090810291909101015261056f81611436565b90506104da565b509392505050565b336001600160a01b03831614156105fd5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c6600000000000000000000000000000000000000000000006064820152608401610206565b3360008181526001602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6001600160a01b0385163314806106855750610685853361014b565b6106f75760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f76656400000000000000000000000000000000000000000000006064820152608401610206565b6104018585858585610999565b3b151590565b81518351146107815760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d617463680000000000000000000000000000000000000000000000006064820152608401610206565b6001600160a01b0384166107e55760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610206565b3360005b845181101561092b57600085828151811061081457634e487b7160e01b600052603260045260246000fd5b60200260200101519050600085838151811061084057634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156108d35760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610206565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906109109084906113b6565b925050819055505050508061092490611436565b90506107e9565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161097b929190611351565b60405180910390a4610991818787878787610b40565b505050505050565b6001600160a01b0384166109fd5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610206565b33610a16818787610a0d88610cf5565b61040188610cf5565b6000848152602081815260408083206001600160a01b038a16845290915290205483811015610a9a5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610206565b6000858152602081815260408083206001600160a01b038b8116855292528083208785039055908816825281208054869290610ad79084906113b6565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610b37828888888888610d4e565b50505050505050565b6001600160a01b0384163b156109915760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610b84908990899088908890889060040161129d565b602060405180830381600087803b158015610b9e57600080fd5b505af1925050508015610bce575060408051601f3d908101601f19168201909252610bcb918101906111e4565b60015b610c8457610bda61147d565b806308c379a01415610c145750610bef611495565b80610bfa5750610c16565b8060405162461bcd60e51b8152600401610206919061137f565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e7465720000000000000000000000006064820152608401610206565b6001600160e01b0319811663bc197c8160e01b14610b375760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610206565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610d3d57634e487b7160e01b600052603260045260246000fd5b602090810291909101015292915050565b6001600160a01b0384163b156109915760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610d9290899089908890889088906004016112fb565b602060405180830381600087803b158015610dac57600080fd5b505af1925050508015610ddc575060408051601f3d908101601f19168201909252610dd9918101906111e4565b60015b610de857610bda61147d565b6001600160e01b0319811663f23a6e6160e01b14610b375760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610206565b80356001600160a01b0381168114610e7057600080fd5b919050565b600082601f830112610e85578081fd5b81356020610e9282611392565b604051610e9f8282611409565b8381528281019150858301600585901b87018401881015610ebe578586fd5b855b85811015610edc57813584529284019290840190600101610ec0565b5090979650505050505050565b600082601f830112610ef9578081fd5b813567ffffffffffffffff811115610f1357610f13611467565b604051610f2a601f8301601f191660200182611409565b818152846020838601011115610f3e578283fd5b816020850160208301379081016020019190915292915050565b60008060408385031215610f6a578182fd5b610f7383610e59565b9150610f8160208401610e59565b90509250929050565b600080600080600060a08688031215610fa1578081fd5b610faa86610e59565b9450610fb860208701610e59565b9350604086013567ffffffffffffffff80821115610fd4578283fd5b610fe089838a01610e75565b94506060880135915080821115610ff5578283fd5b61100189838a01610e75565b93506080880135915080821115611016578283fd5b5061102388828901610ee9565b9150509295509295909350565b600080600080600060a08688031215611047578081fd5b61105086610e59565b945061105e60208701610e59565b93506040860135925060608601359150608086013567ffffffffffffffff811115611087578182fd5b61102388828901610ee9565b600080604083850312156110a5578182fd5b6110ae83610e59565b9150602083013580151581146110c2578182fd5b809150509250929050565b600080604083850312156110df578182fd5b6110e883610e59565b946020939093013593505050565b60008060408385031215611108578182fd5b823567ffffffffffffffff8082111561111f578384fd5b818501915085601f830112611132578384fd5b8135602061113f82611392565b60405161114c8282611409565b8381528281019150858301600585901b870184018b101561116b578889fd5b8896505b848710156111945761118081610e59565b83526001969096019591830191830161116f565b50965050860135925050808211156111aa578283fd5b506111b785828601610e75565b9150509250929050565b6000602082840312156111d2578081fd5b81356111dd8161151f565b9392505050565b6000602082840312156111f5578081fd5b81516111dd8161151f565b600060208284031215611211578081fd5b5035919050565b6000815180845260208085019450808401835b838110156112475781518752958201959082019060010161122b565b509495945050505050565b60008151808452815b818110156112775760208185018101518683018201520161125b565b818111156112885782602083870101525b50601f01601f19169290920160200192915050565b60006001600160a01b03808816835280871660208401525060a060408301526112c960a0830186611218565b82810360608401526112db8186611218565b905082810360808401526112ef8185611252565b98975050505050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261133360a0830184611252565b979650505050505050565b6020815260006111dd6020830184611218565b6040815260006113646040830185611218565b82810360208401526113768185611218565b95945050505050565b6020815260006111dd6020830184611252565b600067ffffffffffffffff8211156113ac576113ac611467565b5060051b60200190565b600082198211156113c9576113c9611451565b500190565b600181811c908216806113e257607f821691505b6020821081141561140357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff8111828210171561142f5761142f611467565b6040525050565b600060001982141561144a5761144a611451565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d111561149257600481823e5160e01c5b90565b600060443d10156114a35790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156114d357505050505090565b82850191508151818111156114eb5750505050505090565b843d87010160208285010111156115055750505050505090565b61151460208286010187611409565b509095945050505050565b6001600160e01b03198116811461153557600080fd5b5056fea26469706673582212208d69a115696f4349805da9ef652f4f940c657d95395e927b2b8cb1dc1278682e64736f6c63430008040033";

export class TestERC1155__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestERC1155> {
    return super.deploy(overrides || {}) as Promise<TestERC1155>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestERC1155 {
    return super.attach(address) as TestERC1155;
  }
  connect(signer: Signer): TestERC1155__factory {
    return super.connect(signer) as TestERC1155__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestERC1155Interface {
    return new utils.Interface(_abi) as TestERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestERC1155 {
    return new Contract(address, _abi, signerOrProvider) as TestERC1155;
  }
}
