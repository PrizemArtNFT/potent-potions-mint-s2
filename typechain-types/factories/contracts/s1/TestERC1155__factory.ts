/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TestERC1155,
  TestERC1155Interface,
} from "../../../contracts/s1/TestERC1155";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040805160208101909152600081526200002c81620000f3565b5062000059336001670de0b6b3a7640000604051806020016040528060008152506200010c60201b60201c565b6200007e3360026001604051806020016040528060008152506200010c60201b60201c565b620000a33360036001604051806020016040528060008152506200010c60201b60201c565b620000c83360046001604051806020016040528060008152506200010c60201b60201c565b620000ed3360056001604051806020016040528060008152506200010c60201b60201c565b62000742565b8051620001089060029060208401906200047c565b5050565b6001600160a01b038416620001725760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084015b60405180910390fd5b33600062000180856200022e565b905060006200018f856200022e565b90506000868152602081815260408083206001600160a01b038b16845290915281208054879290620001c3908490620005fd565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4620002258360008989898962000290565b50505050505050565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106200027757634e487b7160e01b600052603260045260246000fd5b602090810291909101015292915050565b505050505050565b620002af846001600160a01b03166200046d60201b6200050a1760201c565b15620002885760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190620002eb9089908990889088908890600401620005a1565b602060405180830381600087803b1580156200030657600080fd5b505af192505050801562000339575060408051601f3d908101601f19168201909252620003369181019062000522565b60015b620003fa57620003486200069a565b806308c379a0141562000389575062000360620006b3565b806200036d57506200038b565b8060405162461bcd60e51b8152600401620001699190620005e8565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d4552433131353560448201527f526563656976657220696d706c656d656e746572000000000000000000000000606482015260840162000169565b6001600160e01b0319811663f23a6e6160e01b14620002255760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b606482015260840162000169565b6001600160a01b03163b151590565b8280546200048a9062000622565b90600052602060002090601f016020900481019282620004ae5760008555620004f9565b82601f10620004c957805160ff1916838001178555620004f9565b82800160010185558215620004f9579182015b82811115620004f9578251825591602001919060010190620004dc565b50620005079291506200050b565b5090565b5b808211156200050757600081556001016200050c565b60006020828403121562000534578081fd5b81516001600160e01b0319811681146200054c578182fd5b9392505050565b60008151808452815b818110156200057a576020818501810151868301820152016200055c565b818111156200058c5782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090620005dd9083018462000553565b979650505050505050565b6020815260006200054c602083018462000553565b600082198211156200061d57634e487b7160e01b81526011600452602481fd5b500190565b600181811c908216806200063757607f821691505b602082108114156200065957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f191681016001600160401b03811182821017156200069357634e487b7160e01b600052604160045260246000fd5b6040525050565b600060033d1115620006b057600481823e5160e01c5b90565b600060443d1015620006c25790565b6040516003193d81016004833e81513d6001600160401b038083116024840183101715620006f257505050505090565b82850191508151818111156200070b5750505050505090565b843d8701016020828501011115620007265750505050505090565b62000737602082860101876200065f565b509095945050505050565b6113f080620007526000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461017957600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004610e28565b61018c565b6040519081526020015b60405180910390f35b6100c56100c0366004610f1c565b610222565b60405190151581526020016100a9565b6100e86100e3366004610f5b565b610274565b6040516100a991906110dc565b610108610103366004610ce5565b610308565b005b61011d610118366004610e51565b610354565b6040516100a9919061109b565b610108610138366004610dee565b6104b6565b6100c561014b366004610cb3565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b610108610187366004610d8b565b6104c5565b60006001600160a01b0383166101fc5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061025357506001600160e01b031982166303a24d0760e21b145b8061026e57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606002805461028390611250565b80601f01602080910402602001604051908101604052809291908181526020018280546102af90611250565b80156102fc5780601f106102d1576101008083540402835291602001916102fc565b820191906000526020600020905b8154815290600101906020018083116102df57829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103245750610324853361014b565b6103405760405162461bcd60e51b81526004016101f390611137565b61034d8585858585610519565b5050505050565b606081518351146103b95760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016101f3565b6000835167ffffffffffffffff8111156103e357634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561040c578160200160208202803683370190505b50905060005b84518110156104ae5761047385828151811061043e57634e487b7160e01b600052603260045260246000fd5b602002602001015185838151811061046657634e487b7160e01b600052603260045260246000fd5b602002602001015161018c565b82828151811061049357634e487b7160e01b600052603260045260246000fd5b60209081029190910101526104a7816112b8565b9050610412565b509392505050565b6104c1338383610712565b5050565b6001600160a01b0385163314806104e157506104e1853361014b565b6104fd5760405162461bcd60e51b81526004016101f390611137565b61034d85858585856107f3565b6001600160a01b03163b151590565b815183511461057b5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016101f3565b6001600160a01b0384166105a15760405162461bcd60e51b81526004016101f390611185565b3360005b84518110156106a45760008582815181106105d057634e487b7160e01b600052603260045260246000fd5b6020026020010151905060008583815181106105fc57634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600084815280835260408082206001600160a01b038e16835290935291909120549091508181101561064c5760405162461bcd60e51b81526004016101f3906111ca565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610689908490611238565b925050819055505050508061069d906112b8565b90506105a5565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516106f49291906110ae565b60405180910390a461070a81878787878761091d565b505050505050565b816001600160a01b0316836001600160a01b031614156107865760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016101f3565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166108195760405162461bcd60e51b81526004016101f390611185565b33600061082585610a91565b9050600061083285610a91565b90506000868152602081815260408083206001600160a01b038c168452909152902054858110156108755760405162461bcd60e51b81526004016101f3906111ca565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a168252812080548892906108b2908490611238565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610912848a8a8a8a8a610aea565b505050505050505050565b6001600160a01b0384163b1561070a5760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906109619089908990889088908890600401610ff8565b602060405180830381600087803b15801561097b57600080fd5b505af19250505080156109ab575060408051601f3d908101601f191682019092526109a891810190610f3f565b60015b610a58576109b76112ff565b806308c379a014156109f157506109cc611317565b806109d757506109f3565b8060405162461bcd60e51b81526004016101f391906110dc565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016101f3565b6001600160e01b0319811663bc197c8160e01b14610a885760405162461bcd60e51b81526004016101f3906110ef565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610ad957634e487b7160e01b600052603260045260246000fd5b602090810291909101015292915050565b6001600160a01b0384163b1561070a5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610b2e9089908990889088908890600401611056565b602060405180830381600087803b158015610b4857600080fd5b505af1925050508015610b78575060408051601f3d908101601f19168201909252610b7591810190610f3f565b60015b610b84576109b76112ff565b6001600160e01b0319811663f23a6e6160e01b14610a885760405162461bcd60e51b81526004016101f3906110ef565b80356001600160a01b0381168114610bcb57600080fd5b919050565b600082601f830112610be0578081fd5b81356020610bed82611214565b604051610bfa828261128b565b8381528281019150858301600585901b87018401881015610c19578586fd5b855b85811015610c3757813584529284019290840190600101610c1b565b5090979650505050505050565b600082601f830112610c54578081fd5b813567ffffffffffffffff811115610c6e57610c6e6112e9565b604051610c85601f8301601f19166020018261128b565b818152846020838601011115610c99578283fd5b816020850160208301379081016020019190915292915050565b60008060408385031215610cc5578182fd5b610cce83610bb4565b9150610cdc60208401610bb4565b90509250929050565b600080600080600060a08688031215610cfc578081fd5b610d0586610bb4565b9450610d1360208701610bb4565b9350604086013567ffffffffffffffff80821115610d2f578283fd5b610d3b89838a01610bd0565b94506060880135915080821115610d50578283fd5b610d5c89838a01610bd0565b93506080880135915080821115610d71578283fd5b50610d7e88828901610c44565b9150509295509295909350565b600080600080600060a08688031215610da2578081fd5b610dab86610bb4565b9450610db960208701610bb4565b93506040860135925060608601359150608086013567ffffffffffffffff811115610de2578182fd5b610d7e88828901610c44565b60008060408385031215610e00578182fd5b610e0983610bb4565b915060208301358015158114610e1d578182fd5b809150509250929050565b60008060408385031215610e3a578182fd5b610e4383610bb4565b946020939093013593505050565b60008060408385031215610e63578182fd5b823567ffffffffffffffff80821115610e7a578384fd5b818501915085601f830112610e8d578384fd5b81356020610e9a82611214565b604051610ea7828261128b565b8381528281019150858301600585901b870184018b1015610ec6578889fd5b8896505b84871015610eef57610edb81610bb4565b835260019690960195918301918301610eca565b5096505086013592505080821115610f05578283fd5b50610f1285828601610bd0565b9150509250929050565b600060208284031215610f2d578081fd5b8135610f38816113a1565b9392505050565b600060208284031215610f50578081fd5b8151610f38816113a1565b600060208284031215610f6c578081fd5b5035919050565b6000815180845260208085019450808401835b83811015610fa257815187529582019590820190600101610f86565b509495945050505050565b60008151808452815b81811015610fd257602081850181015186830182015201610fb6565b81811115610fe35782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0386811682528516602082015260a06040820181905260009061102490830186610f73565b82810360608401526110368186610f73565b9050828103608084015261104a8185610fad565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061109090830184610fad565b979650505050505050565b602081526000610f386020830184610f73565b6040815260006110c16040830185610f73565b82810360208401526110d38185610f73565b95945050505050565b602081526000610f386020830184610fad565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6020808252602e908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526d195c881bdc88185c1c1c9bdd995960921b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b600067ffffffffffffffff82111561122e5761122e6112e9565b5060051b60200190565b6000821982111561124b5761124b6112d3565b500190565b600181811c9082168061126457607f821691505b6020821081141561128557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff811182821017156112b1576112b16112e9565b6040525050565b60006000198214156112cc576112cc6112d3565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d111561131457600481823e5160e01c5b90565b600060443d10156113255790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561135557505050505090565b828501915081518181111561136d5750505050505090565b843d87010160208285010111156113875750505050505090565b6113966020828601018761128b565b509095945050505050565b6001600160e01b0319811681146113b757600080fd5b5056fea2646970667358221220b0d9aaffaf492f32a09455f796d3f876e09fe5b3b5757c6025146faff6c2824b64736f6c63430008040033";

type TestERC1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestERC1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestERC1155__factory extends ContractFactory {
  constructor(...args: TestERC1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestERC1155> {
    return super.deploy(overrides || {}) as Promise<TestERC1155>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestERC1155 {
    return super.attach(address) as TestERC1155;
  }
  override connect(signer: Signer): TestERC1155__factory {
    return super.connect(signer) as TestERC1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestERC1155Interface {
    return new utils.Interface(_abi) as TestERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestERC1155 {
    return new Contract(address, _abi, signerOrProvider) as TestERC1155;
  }
}
