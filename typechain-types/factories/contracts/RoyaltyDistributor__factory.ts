/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  RoyaltyDistributor,
  RoyaltyDistributorInterface,
} from "../../contracts/RoyaltyDistributor";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
    ],
    name: "ReceiverAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
    ],
    name: "ReceiverRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
    ],
    name: "addReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cumulativePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "distributeBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "receiverCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "receivers",
    outputs: [
      {
        internalType: "address payable",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "receiversArrayLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
    ],
    name: "removeReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405261000d33610012565b610062565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610a5f806100716000396000f3fe6080604052600436106100955760003560e01c8063983ef3ed11610059578063983ef3ed1461016c578063a8f3c73214610182578063bfd772fc146101a2578063cd8449e7146101e1578063f2fde38b146101f757600080fd5b8063280beaa2146100d45780635f3ccdd9146100f8578063715018a61461011a5780637943da691461012f5780638da5cb5b1461014457600080fd5b366100cf576040513481527f1a07f76ee25d689f09f51951e5b4594bb2e440b7935111a41ba06afeb50ff0149060200160405180910390a1005b600080fd5b3480156100e057600080fd5b506001545b6040519081526020015b60405180910390f35b34801561010457600080fd5b5061011861011336600461091b565b610217565b005b34801561012657600080fd5b506101186103ef565b34801561013b57600080fd5b50610118610403565b34801561015057600080fd5b506000546040516001600160a01b0390911681526020016100ef565b34801561017857600080fd5b506100e560035481565b34801561018e57600080fd5b5061011861019d36600461091b565b610562565b3480156101ae57600080fd5b506101c26101bd366004610946565b61079d565b604080516001600160a01b0390931683526020830191909152016100ef565b3480156101ed57600080fd5b506100e560025481565b34801561020357600080fd5b506101186102123660046108f8565b6107d5565b61021f61084e565b6064811061025f5760405162461bcd60e51b81526020600482015260086024820152670a89e9ebe90928e960c31b60448201526064015b60405180910390fd5b600081116102995760405162461bcd60e51b8152602060048201526007602482015266544f4f5f4c4f5760c81b6044820152606401610256565b6064816002546102a9919061095e565b11156102e55760405162461bcd60e51b815260206004820152600b60248201526a13505617d4915050d2115160aa1b6044820152606401610256565b604080518082019091526001600160a01b03838116825260208201838152600180548082018255600091825293517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6600295860290810180546001600160a01b031916929095169190911790935590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf79092019190915581548392919061038e90849061095e565b9091555050600380549060006103a3836109e3565b9190505550816001600160a01b03167fcc5646d2b5056370ad8ab59b52dc4674e8de23cbfb0e4c329066867a28ea00bf826040516103e391815260200190565b60405180910390a25050565b6103f761084e565b61040160006108a8565b565b61040b61084e565b47806104495760405162461bcd60e51b815260206004820152600d60248201526c454d5054595f42414c414e434560981b6044820152606401610256565b60005b60015481101561055e5760006001828154811061047957634e487b7160e01b600052603260045260246000fd5b600091825260208083206040805180820190915260029093020180546001600160a01b03168084526001909101549183018290529193506104bb606487610976565b6104c59190610996565b604051600081818185875af1925050503d8060008114610501576040519150601f19603f3d011682016040523d82523d6000602084013e610506565b606091505b50509050806105495760405162461bcd60e51b815260206004820152600f60248201526e15d2551211149055d7d19052531151608a1b6044820152606401610256565b50508080610556906109e3565b91505061044c565b5050565b61056a61084e565b60005b826001600160a01b03166001828154811061059857634e487b7160e01b600052603260045260246000fd5b60009182526020909120600290910201546001600160a01b0316148015906105f2575081600182815481106105dd57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600202016001015414155b156106485780610601816109e3565b600154909250821090506106435760405162461bcd60e51b81526020600482015260096024820152681393d517d193d5539160ba1b6044820152606401610256565b61056d565b600180546106579082906109b5565b8154811061067557634e487b7160e01b600052603260045260246000fd5b9060005260206000209060020201600182815481106106a457634e487b7160e01b600052603260045260246000fd5b60009182526020909120825460029092020180546001600160a01b0319166001600160a01b039092169190911781556001918201549082015580546106ea9082906109b5565b8154811061070857634e487b7160e01b600052603260045260246000fd5b60009182526020822060029182020180546001600160a01b0319168155600101829055805484929061073b9084906109b5565b909155505060038054906000610750836109cc565b9190505550826001600160a01b03167f41639571b27e7a11b27cda3cf8adcad3e469f8be2b8c3796d4d5e5603e6a57b18360405161079091815260200190565b60405180910390a2505050565b600181815481106107ad57600080fd5b6000918252602090912060029091020180546001909101546001600160a01b03909116915082565b6107dd61084e565b6001600160a01b0381166108425760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610256565b61084b816108a8565b50565b6000546001600160a01b031633146104015760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610256565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610909578081fd5b813561091481610a14565b9392505050565b6000806040838503121561092d578081fd5b823561093881610a14565b946020939093013593505050565b600060208284031215610957578081fd5b5035919050565b60008219821115610971576109716109fe565b500190565b60008261099157634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156109b0576109b06109fe565b500290565b6000828210156109c7576109c76109fe565b500390565b6000816109db576109db6109fe565b506000190190565b60006000198214156109f7576109f76109fe565b5060010190565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461084b57600080fdfea2646970667358221220b26b5da34e65362c9102b3e634a9262389932cdaec5e95abc89af75d11b4cfd264736f6c63430008040033";

type RoyaltyDistributorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RoyaltyDistributorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RoyaltyDistributor__factory extends ContractFactory {
  constructor(...args: RoyaltyDistributorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<RoyaltyDistributor> {
    return super.deploy(overrides || {}) as Promise<RoyaltyDistributor>;
  }
  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RoyaltyDistributor {
    return super.attach(address) as RoyaltyDistributor;
  }
  override connect(signer: Signer): RoyaltyDistributor__factory {
    return super.connect(signer) as RoyaltyDistributor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RoyaltyDistributorInterface {
    return new utils.Interface(_abi) as RoyaltyDistributorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RoyaltyDistributor {
    return new Contract(address, _abi, signerOrProvider) as RoyaltyDistributor;
  }
}
